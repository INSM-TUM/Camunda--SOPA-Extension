export class Response {
    constructor() {
        Object.defineProperty(this, "value", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        Object.defineProperty(this, "error", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
    }
    static of(value) {
        const r = new Response();
        r.value = value;
        return r;
    }
    static error(message) {
        const r = new Response();
        r.error = message;
        return r;
    }
    static empty() {
        return new Response();
    }
    isError() {
        return this.error ? true : false;
    }
    isEmpty() {
        return !this.error && (this.value === null || this.value === undefined);
    }
    orElse(altVal) {
        return this.isError() || this.isEmpty() ? altVal : this.value;
    }
    orElseThrow() {
        if (this.error) {
            throw new Error(this.error);
        }
        if (this.value === null || this.value === undefined) {
            throw new Error("response contains no value");
        }
        return this.value;
    }
}
